long long int global_int64 = 0xFAFAFAFAFA;int global_int = 40;int global_short64 = -0xABC;long long fun() {    int int_num10 = 3 + global_int;    long long int rec = fun();    long long int_num16 = 0xFFFFFFFFF--;    long long int int64_num16 = 0xABAABAB++;    {//        short result1;        long long result1 = int64_num16 / int_num16 * int_num10;        {            long result1;            {                long long int result1;                result1 = 4;                {                    int unknown = 0xAB * 2;                    long long result1 = rec * unknown++;                    return result1;                }            }        }        {            int i = 1;            for (i = 0; i < 4; i++) {                long long int result2 = (--int64_num16 % int_num10) * (int64_num16++ / int64_num16);                return result2;            }            int result2;            return result2;        }    }    return int64_num16 > int_num16;}int fun2() {    int a = 0;    long long int b = 0xFFFFB;    return a;//    return b;//    return a + b;    return a == b;}long long int fun3() {    int a = 0;    long long int b = 0xFFFFB;    return ++a;}int main() {    long long a = fun();    long long int b = fun();    a = fun2();    b = fun2();//    a = fun3();    b = fun3();//    a = test();    b = global_int;//    a = result2;    int c = 3;    a = c;    return 0;}